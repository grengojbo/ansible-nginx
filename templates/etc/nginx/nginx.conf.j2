# {{ ansible_managed }}

user {{ nginx_user }};

pid /var/run/nginx.pid;

{% if nginx_daemon_disable %}
daemon off;
{% endif %}

# Nicenness, from 20 (nice) to -20 (not nice)
worker_priority {{ nginx_worker_priority | default('0') }};

# Number of workers to run, usually equals number of CPU cores
worker_processes {{ nginx_worker_processes | default(ansible_processor_cores) }};

# Maximum number of opened files per process, must be higher than worker_connections
worker_rlimit_nofile {{ nginx_worker_rlimit_nofile | default('4096') }};

{% if nginx_flavor == 'passenger' %}
# Phusion Passenger requires correct $PATH to work
env PATH;

{% endif %}
events {
	worker_connections {{ nginx_worker_connections | default('1024') }};
  {% if nginx_multi_accept %}
  multi_accept on;
  {% endif %}
}
{% if nginx_rtmp_enable %}
include /etc/nginx/rtmp.conf;
{% endif %}

http {
  # proxy_temp_path {{nginx_proxy_temp_path}};
  # proxy_cache_path {{nginx_proxy_cache_path_str}};
  {% if nginx_source_modules_included.naxsi_module is defined %}
  include /etc/nginx/naxsi_core.rules;
  {% endif %}
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	server_tokens {{ nginx_http_server_tokens | default('off') }};

	server_names_hash_bucket_size {{ nginx_http_server_names_hash_bucket_size | default('64') }};
	server_names_hash_max_size {{ nginx_http_server_names_hash_max_size | default('512') }};
  types_hash_max_size {{ nginx_types_hash_max_size | default('2048') }};
  types_hash_bucket_size {{ nginx_types_hash_bucket_size | default('64') }};

	# Logging
	access_log {{ nginx_http_access_log | default('/var/log/nginx/access.log') }};
	error_log {{ nginx_http_error_log | default('/var/log/nginx/error.log') }};

	add_header X-Clacks-Overhead "GNU Terry Pratchett";

{% if nginx_http_options|d() and nginx_http_options %}
{{ nginx_http_options | indent(8, true) }}

{% endif %}

  {% if nginx_keepalive == 'on' %}
  # Timeouts
  keepalive_timeout  {{ nginx_keepalive_timeout | default('30') }};
  client_body_timeout  {{ nginx_client_body_timeout | default('10') }};
  client_header_timeout  {{ nginx_client_header_timeout | default('10') }};
  send_timeout  {{ nginx_send_timeout | default('10') }};
  {% endif %}

  gzip  {{nginx_gzip}};
  {% if nginx_gzip == 'on' %}
  gzip_http_version {{ nginx_gzip_http_version }};
  gzip_comp_level {{ nginx_gzip_comp_level }};
  gzip_proxied {{ nginx_gzip_proxied }};
  gzip_vary {{ nginx_gzip_vary }};
  {% if nginx_gzip_buffers %}
  gzip_buffers {{ nginx_gzip_buffers }};
  {% endif %}
  gzip_types {{nginx_gzip_types|join(' ')}};
  gzip_min_length {{ nginx_gzip_min_length }};
  gzip_disable "msie6";
  {% endif %}
  {% if nginx_proxy_read_timeout %}
  #proxy_read_timeout {{nginx_proxy_read_timeout}};
  {% endif %}
  {% if nginx_enable_rate_limiting %}
  #limit_req_zone $binary_remote_addr zone={{nginx_rate_limiting_zone_name}}:{{nginx_rate_limiting_backoff}} rate={{nginx_rate_limit}};
  {% endif %}

{% if nginx_buffers == 'on' %}
  client_body_buffer_size  {{nginx_client_body_buffer_size}};
  client_header_buffer_size  {{nginx_client_header_buffer_size}};
  large_client_header_buffers  {{nginx_large_client_header_buffers}};
  client_max_body_size {{ nginx_client_max_body_size }};
{% endif %}


{% if ((nginx_http_allow is defined and nginx_http_allow) or
       (nginx_http_auth_basic is defined and nginx_http_auth_basic) or
       (nginx_http_satisfy is defined and nginx_http_satisfy)) %}
        satisfy {{ nginx_http_satisfy | default(nginx_default_satisfy) }};

{% endif %}
{% if nginx_http_allow is defined and nginx_http_allow %}
{% if nginx_http_allow is string %}
        allow {{ nginx_http_allow }};
{% else %}
{% for address in nginx_http_allow %}
	allow {{ address }};
{% endfor %}
{% endif %}
	deny all;

{% endif %}
{% if nginx_http_auth_basic is defined and nginx_http_auth_basic %}
        auth_basic "{% if nginx_http_auth_basic_realm is defined and nginx_http_auth_basic_realm %}{{ nginx_http_auth_basic_realm }}{% else %}{{ nginx_default_auth_basic_realm }}{% endif %}";
        auth_basic_user_file {{ nginx_http_auth_basic_filename | default("/etc/nginx/private/" + nginx_http_auth_basic_name) }};

{% endif %}
{% if nginx_flavor == 'passenger' %}
        # Configuration options for Phusion Passenger
{# These values are set at playbook runtime #}
        passenger_root {{ nginx_passenger_root }};
        passenger_ruby {{ nginx_passenger_ruby }};

        passenger_max_pool_size {{ nginx_passenger_max_pool_size }};

{% if nginx_passenger_options %}
{{ nginx_passenger_options | indent(8,true) }}

{% endif %}
{% endif %}
	# Virtual Hosts Configs
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}

# vim:ft=nginx
